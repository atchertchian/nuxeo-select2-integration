<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<nxthemes:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:ui="http://java.sun.com/jsf/facelets"
  xmlns:f="http://java.sun.com/jsf/core"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:c="http://java.sun.com/jstl/core"
  xmlns:nxthemes="http://nuxeo.org/nxthemes"
  xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
  xmlns:nxd="http://nuxeo.org/nxweb/document"
  xmlns:nxl="http://nuxeo.org/nxforms/layout"
  xmlns:nxu="http://nuxeo.org/nxweb/util">

  <ui:define name="page title">
    Testing Select 2
  </ui:define>

  <ui:define name="body">

  <h:form>

<table>
<tr>
<td> Simple </td>
<td>
   <ui:include src="/select2/select2_widget_template.xhtml">
    <ui:param name="selectid" value="one" />
    <ui:param name="width" value="200" />
    <ui:param name="minimumInputLength" value="3" />
    <ui:param name="query" value="select * from Document where ecm:fulltext LIKE ?" />
    <ui:param name="documentSchemas" value="dublincore" />
    <ui:param name="labelProperty" value="dc:title" />
   </ui:include>
</td>
</tr>
<tr>
<td> Custom formatting </td>
<td>
   <ui:include src="/select2/select2_widget_template.xhtml">
    <ui:param name="selectid" value="two" />
    <ui:param name="width" value="400" />
    <ui:param name="minimumInputLength" value="2" />
    <ui:param name="query" value="select * from Document where ecm:fulltext LIKE ?" />
    <ui:param name="documentSchemas" value="dublincore,common" />
    <ui:param name="labelProperty" value="dc:creator" />
    <ui:param name="customFormater" value="myformater" />
   </ui:include>
</td>
</tr>

</table>
  </h:form>

  <script src="/nuxeo/scripts/select2/select2.js"/>

  <script>
    <!--
  function myformater(doc) {
   var markup = "<table><tr>";
   markup += "<td><img src='/nuxeo" + doc.properties['common:icon'] + "'/></td>";
   markup += "<td>" + doc.title + " (" + doc.properties['dc:creator'] + ")</td>";
   markup += "</tr></table>";
   return markup;
  }
  -->
  </script>
  <script>
    <!--
    jQuery(document).ready(function() {

     jQuery('head').append('<link rel="stylesheet" href="/nuxeo/css/select2.css" type="text/css" />');

     jQuery("input[type='hidden'][id$=select2]").each(function(idx,el) {

       // retrieve parameters from Html
       var elid = el.id;
       el=jQuery(el);
       var paramid = elid + "-params";
       paramid=paramid.replace(":","\\:");
       var params = JSON.parse(jQuery("#" + paramid).val());

       // set style on select
       el.css("width",params.width + "px");

       // init Automation Operation
       var op = jQuery().automation('Document.PageProvider',{"documentSchemas":params.documentSchemas});
       op.addParameter("query",params.query);
       op.addParameter("page","0");
       op.addParameter("pageSize","20");

       // detect if we need custom result formating
       var customFormaterFunction = null;
       if (params.customFormater && params.customFormater.length>0) {
          customFormaterFunction=eval(params.customFormater);
       }

       // build select2 parameters
       var select2_params = {
        minimumInputLength: params.minimumInputLength,
        query: function (query) {
          op.addParameter("queryParams", query.term + "%");
          op.execute(function(data, textStatus,xhr) {
            var results = [];
            for ( i = 0; i < data.entries.length; i++) {
              var doc = data.entries[i];
              if (customFormaterFunction!=null) {
                results.push(doc);
              } else {
                var resultEntryId= doc.uid;
                var resultEntryLabel = doc.title;
                if (params.labelProperty && params.labelProperty.length>0) {
                  resultEntryLabel = doc.properties[params.labelProperty];
                }
                results.push({id: resultEntryId, text: resultEntryLabel});
              }
            }
            query.callback({results : results});
          });
       }}

       // append custom result formater if needed
       if (customFormaterFunction!=null) {
         select2_params.formatResult = customFormaterFunction;
       }

       // init select2
       el.select2(select2_params);
     });
   });
   -->
  </script>


  </ui:define>
</nxthemes:composition>
